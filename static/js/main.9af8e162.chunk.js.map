{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAGtB,SAASC,IACtB,MAA0BC,mBAAS,4BAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAcC,iBAAO,MAwB3B,SAASC,IACPC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,8BACTE,EAAY,MACZE,GAAa,GAGf,IAAMM,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,KACxCY,EAAUpB,EAAQQ,EAAqB,GAAVS,GAEnC,OACE,sBAAKI,UAAU,MAAf,UACE,6BAAKf,IAEL,sBAAKe,UAAU,QAAf,UACE,+BAAOJ,IACP,qCACA,+BAAOG,OAGT,sBAAKC,UAAU,UAAf,WACIX,GAAa,wBAAQY,QA5C7B,WAC8B,OAAxBV,EAAYI,UAChBT,EAAS,uBACTI,GAAa,GACbC,EAAYI,QAAUO,aAAY,WAChCd,GAAY,SAACD,GACX,OAAIA,GAAY,EAAUA,EAAW,GACrCM,IACO,QAER,OAkCgB,mBACdJ,GAAa,wBAAQY,QAhC5B,WACsB,OAAhBV,IAEJL,EAAS,eACTQ,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBL,GAAa,KA0BK,kBACd,wBAAQW,QAASR,EAAjB,yBCvDRU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9af8e162.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nfunction padTime(time) {\n  return time.toString().padStart(2, '0');\n}\n\nexport default function App() {\n  const [title, setTitle] = useState('Let the countdown begin!');\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef(null);\n\n  function startTimer() {\n    if (intervalRef.current !== null) return;\n    setTitle(`You're doing great!`);\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft((timeLeft) => {\n        if (timeLeft >= 1) return timeLeft - 1;\n        resetTimer();\n        return 0;\n      });\n    }, 1000);\n  }\n\n  function stopTimer() {\n    if (intervalRef === null) return;\n\n    setTitle(`Keep it up!`);\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setIsRunning(false);\n  }\n\n  function resetTimer() {\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(`Ready to go another round?`);\n    setTimeLeft(25 * 60);\n    setIsRunning(false);\n  }\n\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(timeLeft - minutes * 60);\n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n\n      <div className=\"buttons\">\n        {!isRunning && <button onClick={startTimer}>Start</button>}\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}